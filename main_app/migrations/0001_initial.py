# Generated by Django 5.1.5 on 2025-01-23 15:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('he/him', 'he/him'), ('she/her', 'she/her'), ('they/them', 'they/them'), ('other', 'other')], max_length=20)),
                ('city', models.CharField(max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(choices=[('Blizzard', 'Blizzard'), ('Epic', 'Epic'), ('Microsoft', 'Microsoft'), ('Nintendo', 'Nintendo'), ('Sony', 'Sony'), ('Steam', 'Steam'), ('Ubisoft', 'Ubisoft')], default='Blizzard', max_length=20)),
                ('tag', models.CharField(max_length=50)),
                ('profile_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Genre_Scores',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pinball', models.IntegerField(default=0)),
                ('adventure', models.IntegerField(default=0)),
                ('indie', models.IntegerField(default=0)),
                ('arcade', models.IntegerField(default=0)),
                ('visual_novel', models.IntegerField(default=0)),
                ('card_and_board', models.IntegerField(default=0)),
                ('moba', models.IntegerField(default=0)),
                ('point_and_click', models.IntegerField(default=0)),
                ('fighting', models.IntegerField(default=0)),
                ('shooter', models.IntegerField(default=0)),
                ('music', models.IntegerField(default=0)),
                ('platform', models.IntegerField(default=0)),
                ('puzzle', models.IntegerField(default=0)),
                ('racing', models.IntegerField(default=0)),
                ('real_time_strategy', models.IntegerField(default=0)),
                ('role_playing', models.IntegerField(default=0)),
                ('simulator', models.IntegerField(default=0)),
                ('sport', models.IntegerField(default=0)),
                ('strategy', models.IntegerField(default=0)),
                ('turn_based_strategy', models.IntegerField(default=0)),
                ('tactical', models.IntegerField(default=0)),
                ('hand_and_slash', models.IntegerField(default=0)),
                ('quiz_trivia', models.IntegerField(default=0)),
                ('profile_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='main_app.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('genre', models.JSONField(default=list)),
                ('fav_rank', models.IntegerField()),
                ('profile_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.profile')),
            ],
            options={
                'ordering': ['fav_rank'],
            },
        ),
        migrations.CreateModel(
            name='Profile_Block',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_blocked', models.DateField()),
                ('blocked_profile_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='block_recieved', to='main_app.profile')),
                ('profile_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='block_initiated', to='main_app.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Profile_Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_matched', models.DateField()),
                ('match_profile_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_recieved', to='main_app.profile')),
                ('profile_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_initiated', to='main_app.profile')),
            ],
        ),
    ]
